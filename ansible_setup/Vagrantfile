# -*- mode: ruby -*-
# vi: set ft=ruby :

# Start of the configuration section

# General
VM_IMAGE = "generic/centos7"
PROVIDER = "virtualbox"

# Versions
# Versions are managed by the Ansible playbook. 
# See https://github.com/puzzle/ansible-rancher for more information.

# Resources
CPU_CORES_RANCHER_NODES = 2
MEMORY_RANCHER_NODES = 4096
CPU_CORES_K8S_NODES = 2
MEMORY_K8S_NODES = 4096
CPU_CORES_CTL = 1
MEMORY_CTL = 512

# Node Count
K8S_NODES = 1
RANCHER_NODES = 1

# Network Settings
PRIVATE_IP_RANGE_FOR_NODES = "172.20.20"    # Specify only the first 3 octets
CONTROL_NODE_IP = "172.20.20.5"
LB_NODE_IP = "172.20.20.3"
PUBLIC_LB_NODE_IP = "192.168.121.254"
KVM_PUBLIC_BRIDGE_INT = "virbr2"            # Specify the vagrant VMs public network GW interface from the host
RANCHER_NODES_BASE_IP = "172.20.20.1"       # Place Rancher nodes inside .10 - .19
K8S_NODES_BASE_IP = "172.20.20.2"           # Place K8s nodes inside .20 - .29

# End of the configuration section

$prepare_basic_settings = <<SCRIPT

# Deploy key
[ -f /home/vagrant/.ssh/id_rsa ] || {
    cp /vagrant/id_rsa /home/vagrant/.ssh/id_rsa
    cp /vagrant/id_rsa.pub /home/vagrant/.ssh/id_rsa.pub
    chmod 0600 /home/vagrant/.ssh/id_rsa
    chmod 0600 /home/vagrant/.ssh/id_rsa.pub
}
# Allow ssh passwordless
grep 'vagrant@rancher-lab' ~/.ssh/authorized_keys &>/dev/null || {
  cat /vagrant/id_rsa.pub >> ~/.ssh/authorized_keys
  chmod 0600 ~/.ssh/authorized_keys
}
# Exclude all nodes from host checking
cat > ~/.ssh/config <<EOF
Host *
   StrictHostKeyChecking no
   UserKnownHostsFile=/dev/null
EOF
chmod -R 600 ~/.ssh/config
# Allow PublicKeyAuthentication
sudo sed -i 's|#PubkeyAuthentication.*|PubkeyAuthentication yes|g' /etc/ssh/sshd_config
sudo sed -i 's|#AuthorizedKeysFile.*|AuthorizedKeysFile	.ssh/authorized_keys|g' /etc/ssh/sshd_config
# Populate /etc/hosts
for x in {10..#{9+RANCHER_NODES}}; do
  grep #{PRIVATE_IP_RANGE_FOR_NODES}.${x} /etc/hosts &>/dev/null || {
      echo #{PRIVATE_IP_RANGE_FOR_NODES}.${x} rancher-node-${x##?} | sudo tee -a /etc/hosts &>/dev/null
  }
done
for x in {20..#{19+K8S_NODES}}; do
  grep #{PRIVATE_IP_RANGE_FOR_NODES}.${x} /etc/hosts &>/dev/null || {
      echo #{PRIVATE_IP_RANGE_FOR_NODES}.${x} k8s-node-${x##?} | sudo tee -a /etc/hosts &>/dev/null
  }
done
# Create Rancher working directory
sudo mkdir -p /opt/rancher-setup
sudo chown vagrant:vagrant /opt/rancher-setup
# Disable swap
sudo swapoff -a
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
# Install basic & lab tools
sudo rpm --import http://download.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7
sudo yum -y install epel-release
sudo yum check-update
sudo yum install htop vim wireshark -y
# Set SELinux to permissive mode
sudo setenforce 0
sudo sed -i --follow-symlinks 's/^SELINUX=.*/SELINUX=permissive/g' /etc/sysconfig/selinux
# Disable Firewall
sudo systemctl stop firewalld
sudo systemctl disable firewalld

SCRIPT

$ansible_installation = <<SCRIPT

yum check-update
yum install epel-release -y
yum check-update
yum install ansible git python3-pip libselinux-python3 -y
sudo -H pip3 install --upgrade pip

SCRIPT

Vagrant.configure("2") do |config|
    #Common setup
    config.vm.box = "#{VM_IMAGE}"
    config.vm.synced_folder ".", "/vagrant"
    config.vm.provision "prepare_basic_settings", type: "shell", inline: $prepare_basic_settings, privileged: false
    # Control node
    config.vm.define "ctl-node" do |ctl_node|
        ctl_node.vm.network :private_network, ip: "#{CONTROL_NODE_IP}"
        ctl_node.vm.hostname = "ctl-node"
        ctl_node.vm.provider :"#{PROVIDER}" do |box|
            box.cpus = CPU_CORES_CTL
            box.memory = MEMORY_CTL
        end
        ctl_node.vm.provision "ansible_installation", type: "shell", inline: $ansible_installation, privileged: true
    end
    # Setup Rancher nodes
    (0..RANCHER_NODES-1).each do |i|
        config.vm.define "rancher-node-#{i}" do |rancher_node|
            rancher_node.vm.network :private_network, ip: "#{RANCHER_NODES_BASE_IP}#{i}"
            rancher_node.vm.hostname = "rancher-node-#{i}"
            rancher_node.vm.provider :"#{PROVIDER}" do |box|
                box.cpus = CPU_CORES_RANCHER_NODES
                box.memory = MEMORY_RANCHER_NODES
            end
        end
    end
    # Setup K8s nodes
    (0..K8S_NODES-1).each do |i|
        config.vm.define "k8s-node-#{i}" do |k8s_node|
            k8s_node.vm.network :private_network, ip: "#{K8S_NODES_BASE_IP}#{i}"
            k8s_node.vm.hostname = "k8s-node-#{i}"
            k8s_node.vm.provider :"#{PROVIDER}" do |box|
                box.cpus = CPU_CORES_K8S_NODES
                box.memory = MEMORY_K8S_NODES
            end
        end
    end
end